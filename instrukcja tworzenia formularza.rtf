{\rtf1\ansi\ansicpg1250\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Helvetica-Bold;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid5}
{\list\listtemplateid6\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid501\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid6}
{\list\listtemplateid7\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid601\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid7}
{\list\listtemplateid8\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid701\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid8}
{\list\listtemplateid9\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid801\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid9}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}{\listoverride\listid6\listoverridecount0\ls6}{\listoverride\listid7\listoverridecount0\ls7}{\listoverride\listid8\listoverridecount0\ls8}{\listoverride\listid9\listoverridecount0\ls9}}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Tworzenie formularza w Django.\
\
\pard\tx220\tx720\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li720\fi-720\pardirnatural\partightenfactor0
\ls1\ilvl0\cf0 {\listtext	\uc0\u8226 	}Stworzenie pliku forms.py w katalogu aplikacji NameApp:\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f1\b \cf0 NameProject/NameApp/forms.py\
\
\pard\tx220\tx720\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li720\fi-720\pardirnatural\partightenfactor0
\ls2\ilvl0
\f0\b0 \cf0 {\listtext	\uc0\u8226 	}W stworzony pliku forms.py tworzymy model naszego formularza w podobny spos\'f3b jak tworzyli\uc0\u347 my model danych w pliku models.py pojedynczej aplikacji NameApp:\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f1\b \cf0 \
from django import forms\
\
class FormName(forms.Form):\
	first = forms.CharField()\
	second = forms.EmailField()\
	third = forms.CharField(widget=forms.Textarea)
\f0\b0 \
\
\pard\tx220\tx720\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li720\fi-720\pardirnatural\partightenfactor0
\ls3\ilvl0\cf0 {\listtext	\uc0\u8226 	}W katalogu NameApp w poliku views.py jest logika aplikacji NameApp. W pliku tym importujemy modele danych ale r\'f3wnie\uc0\u380  musmy zaimportow\u263  model naszego formularza. Nast\u281 pnie musimy stworzy\u263  widok obs\u322 uguj\u261 cy nasz formularz:\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f1\b \cf0 /NameApp/view.py:
\f0\b0 \
\

\f1\b form .forms import FormName 
\f0\b0 - importujemy klas\uc0\u281 \'a0odpowiedzialn\u261  za model naszego formularza\

\f1\b \
def form_name_view(request): 
\f0\b0 - tworzymy widok kt\'f3ry b\uc0\u281 dzie uruchamiany w momencie jak przypiszemy do niego jak\u261 \u347  konkretn\u261  \u347 cie\u380 k\u281  url, je\u380 eli ta \u347 cie\u380 ka zostanie uruchomiona to ten model si\u281 \'a0uruchomi i stworzy formularz w szablonie html
\f1\b \
	form = FormName()
\f0\b0  - formularz oparty na modelu formularza stworzonego w pliku forms.py aplikacji NameApp
\f1\b \
	dictForm\{\
		\'82form\'92: form\
	\} 
\f0\b0 - poniewa\uc0\u380  do szablon\'f3w html mog\u261  tylko by\u263  przesy\u322 ane dane w postaci s\u322 ownik\'f3w, w\'f3wczas tworzymy s\u322 ownik w kt\'f3rym jako klucz podajemy nazw\u281 \'a0form a jako warto\u347 ci nasz formularz. W szablonie html do p\'f3l formularza odwo\u322 ujemy si\u281 \'a0tylko po nazwie klucza, nazwa s\u322 ownika nie jest u\u380 ywana w szablonach html
\f1\b \
	return render(request, \'82NameApp/form_name.html\'92, dictForm) 
\f0\b0 - do szablonu form_name.html przesy\uc0\u322 amy formularz w postaci s\u322 ownika\
\
\pard\tx220\tx720\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li720\fi-720\pardirnatural\partightenfactor0
\ls4\ilvl0\cf0 {\listtext	\uc0\u8226 	}W istniej\uc0\u261 cym pliku urls.py dla katalogu aplikacji NameApp przechowywane s\u261  wzorce URL kt\'f3re wywo\u322 ane w adresie internetowym uruchamiaj\u261 \'a0przypisane im widoki. Musimy teraz doda\u263  widok odpowiadaj\u261 cy za formularz w pliku urls.py:\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4323\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f1\b \cf0 from django.urls import path\
from . import views 
\f0\b0  - w pliku ju\uc0\u380  si\u281  znajduje import wszystkich widok\'f3w\
\

\f1\b urlpatterns = [\
	\'85,\
	path(\'82pathurl/\'92, views.form_name_view, name=\'82form_name\'92),\
	\'85m\
]
\f0\b0  - pozostaje nam tylko doda\uc0\u263  do widoku form_name_view z pliku views.py przypisa\u263  \u347 cie\u380 k\u281  kt\'f3ra wywo\u322 a ten widok\
\
\pard\tx220\tx720\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4323\tx4535\tx5102\tx5669\tx6236\tx6803\li720\fi-720\pardirnatural\partightenfactor0
\ls5\ilvl0
\f1\b \cf0 {\listtext	\uc0\u8226 	}
\f0\b0 Najprawdopodobniej robili\uc0\u347 my ju\u380  to podczas tworzenia ca\u322 ego nowego projektu Dajngo, ale dla przypomnienia powt\'f3rzymy. Mamy NameProject kt\'f3ry scala pojedyncze aplikacje NameApp. We wcze\u347 niejszym kroku przypisali\u347 my wzorzec URL do konkretnego widoku formularza w ramach pojedynczej aplikacji NameApp. Poniewa\u380  jednak aplikacja jest sterowana przez nasz projekt NameProject to w jego ustawieniach url musmy podpi\u261 \u263  widoki z pojedynczej aplikacji NameApp. Robimy to podpinaj\u261 c ca\u322 y plik urls.py z aplikacji NameApp b\u261 d\u378  importujemy plik views.py z aplikacji NameApp:\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4323\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f1\b \cf0 \
/NameProject/urls.py 
\f0\b0 - w pliku urls.py ale w katalogu naszego projektu NameProject przypisujemy widoki aplikacji NameApp do wzorc\'f3w URL
\f1\b \
\
from django.urls import path, include 
\f0\b0 - je\uc0\u380 eli widoki b\u281 dziemy przypisywa\u263  plik urls.py z katalogu aplikacji NameApp to musimy zaimportowa\u263  include
\f1\b \
from NameApp import views 
\f0\b0 - je\uc0\u380 eli widoki b\u281 dziemy bezpo\u347 rednio przypisywa\u263  to importujemy z katalogu NameApp modu\u322  views.py\
\

\f1\b urlpatterns = [\
	path('', views.form_name_view, name='form_name'), 
\f0\b0 - je\uc0\u380 eli bezpo\u347 rednio przypisujemy widoki do wzorc\'f3w URL
\f1\b \
	patj(\'82\'92, include(NameApp.urls)), 
\f0\b0 - je\uc0\u380 eli widoki mamy przypisane pliku urls.py aplikacji NameApp to podpisany ca\u322 y plik urls.py aplikacji NameApp
\f1\b \
]
\f0\b0 \
\
\pard\tx220\tx720\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4323\tx4535\tx5102\tx5669\tx6236\tx6803\li720\fi-720\pardirnatural\partightenfactor0
\ls6\ilvl0\cf0 {\listtext	\uc0\u8226 	}Wstrzykiwanie formularza do szablonu html. W pliku views.py dla aplikacji NameApp w widoku form_name_view przygotowali\uc0\u347 my s\u322 ownik dictForm z modelem naszego formularza zaimportowanego z pliku forms.py. A tak naprawd\u281  model formularza znajduje si\u281  w warto\u347 ci form przypisanej do klucza \'82form\'92. Poniewa\u380  do szablonu przekazujemy s\u322 ownik dictFrom, ale w samym formularzu do warto\u347 ci odwo\u322 ujemy si\u281  ju\u380  bezpo\u347 rednio przez nazw\u281  klucza w s\u322 owiku pod kt\'f3r\u261  jest nasza warto\u347 \u263 . A wi\u281 c w szablonie do naszego formularza b\u281 dziemy si\u281  odwo\u322 ywa\u263  w nast\u281 puj\u261 cy spos\'f3b:\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4323\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4323\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f1\b \cf0 \{\{ form \}\}\
\
\pard\tx220\tx720\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4323\tx4535\tx5102\tx5669\tx6236\tx6803\li720\fi-720\pardirnatural\partightenfactor0
\ls7\ilvl0
\f0\b0 \cf0 {\listtext	\uc0\u8226 	}I nie Musmy u\uc0\u380 ywa\u263  w szablonie html znacznik\'f3w wy\u347 wietlaj\u261 cych konkretne pole formularza. Poniewa\u380  to pole ju\u380  stworzyli\u347 my w modelu formularza form.py. A wi\u281 c w szablonie b\u281 dziemy si\u281 \'a0do nich odwo\u322 ywa\u263  przez klucz s\u322 ownka i notacj\u281  kropkow\u261  wybierzemy kt\'f3re pole chcemy umie\u347 ci\u263 , czyli wpiszemy nazw\u281 \'a0z forms.py. Dodatkowo za wszystkim polami formularza musimy zastosowa\u263  token \{% csrf_token %\} kt\'f3ry zabezpiecza nasz formularz przed atakami corss-owymi:\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4323\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4323\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f1\b \cf0 <form method=\'84Post\'94> 
\f0\b0 - informujemy, \uc0\u380 e zaczynamy budowa\u263  formularz, oczywi\u347 cie metoda POST aby ukry\u263  wpisywane warto\u347 ci do formularza
\f1\b \
	\{\{ form.first \}\} 
\f0\b0 - pierwsze pole formularza, takie jak stworzyli\uc0\u347 my w modelu formularza w pliku forms.py
\f1\b \
	\{\{ form.second \}\} 
\f0\b0 - drugie pole formularza, takie jak stworzyli\uc0\u347 my w modelu formularza w pliku forms.py
\f1\b \
	\{\{ form.third \}\} 
\f0\b0 - trzecie pole formularza, takie jak stworzyli\uc0\u347 my w modelu formularza w pliku forms.py
\f1\b \
	\{\{ form.as_p \}\} 
\f0\b0 -  u\uc0\u380 ycie metody as_p na naszym formularzu spowoduje, \u380 e wszystkie pola formularza si\u281 \'a0wy\u347 wietl\u261  jeden pod drugim i nie trzeba b\u281 dzie ich pojedynczo wypisywa\u263 . B\u281 d\u261  mie\u263  nawet etykiety takie jak nazwy p\'f3\u322  formularza z modelu formularza w pliku forms.py 
\f1\b \
	\{% csrf_token \}\} 
\f0\b0 - token zabezpieczaj\uc0\u261 cy przed atakami cross-owymi
\f1\b \
	<input type=\'84submit\'94 value=\'84Submit\'94>
\f0\b0  - przycisk typu submit stworzony ju\uc0\u380  w html a nie w modelu formularza
\f1\b \
</form>
\f0\b0  - zako\uc0\u324 czenie budowy formularza\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\pard\tx220\tx720\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li720\fi-720\pardirnatural\partightenfactor0
\ls8\ilvl0\cf0 {\listtext	\uc0\u8226 	}Teraz dzia\uc0\u322 ania jakie musimy w pliku views.py aplikacji NameApp zrobi\u263  aby po klikni\u281 ciu w przycisk typu submit dane z formularza wr\'f3ci\u322 y do backendu aplikacji i m\'f3c je wykorzysta\u263 . Przez dzia\u322 ania mam na my\u347 li, \u380 e zmieniamy widok form_name_view w pliku views.py tak aby sprawdza\u322  czy ma tylko wy\u347 wietli\u263  formularz czy on otrzymuje dane z formularza. Je\u380 eli dane z formularza wr\'f3ci\u322 y to dostajemy si\u281 \'a0do nich przez metod\u281 \'a0cleaned_data[\'82nazwapolaformularza\'92] wywo\u322 anej na zmiennej form do kt\'f3rej przypisali\u347 my nasz formularz stworzony w pliku forms.py. Robi si\u281  to w ten spos\'f3b:\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
def form_name_view(request):\
	form = FormName()\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f1\b \cf0 	if request.method == \'82POST\'92: 
\f0\b0 - sprawdzenie przez czy zosta\uc0\u322  klikni\u281 ty przypis typu submit dla naszego formularza
\f1\b \
		form = forms.FormName(request.POST)
\f0\b0  - je\uc0\u380 eli tak to do tej zmiennej pod pola formularza stworzone w modelu formularza zosta\u322 y umieszczone dane z formularza
\f1\b \
		if form.is_valid():
\f0\b0  - sprawdzanie czy dane zosta\uc0\u322 y w prawid\u322 owy spos\'f3b podane. To znaczy czy w odpowiednie typy pola zosta\u322 a wpisana odpowiednia warto\u347 \u263 
\f1\b \
			print(\'84First field \'94+form.cleaned_data[\'82first\'92])\
			print(\'84Second field \'94+form.cleaned_data[\'82second\'92])\
			print(\'84Third field \'94+form.cleaned_data[\'82third\'92])
\f0\b0 \
	dictForm\{\
		\'82form\'92: form\
	\}\
	return render(request, \'82NameApp/form_name.html\'92, dictForm)\
\
\pard\tx220\tx720\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li720\fi-720\pardirnatural\partightenfactor0
\ls9\ilvl0\cf0 {\listtext	\uc0\u8226 	}Powy\uc0\u380 szy przyk\u322 ad odbierania danych z formularza jest dobry do bardzo prostych manipulacji takimi danymi. Jednak je\u380 eli by\u347 my chcieli te dane przekaza\u263  do naszego modelu danych musimy w pliku forms.py dla naszej aplikacji NameApp doda\u263  tak zwan\u261 \'a0klas\u281 \'a0Meta w kt\'f3rej przypiszemy nasz model danych do zmiennej. Dodatkowo w klasie definiuj\u261 cej nasz formularz b\u281 dziemy dziedziczy\u263  po forma.ModelForm a nie jak do tej pory po forma.Form:\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\
# Pierwszy spos\'f3b\
# Tworzymy w nim pola formularza kt\'f3re b\uc0\u281 d\u261  odpowiednie do rodzaju danych w modelu danych w aplikacji NameApp. Musz\u261  by\u263  odpowiednie do danych z modelu danych poniewa\u380  je\u380 eli b\u281 dziemy chcieli dane z formularza przes\u322 a\u263  do modelu danych to musz\u261  by\u263  to odpowiednie pola. W tym sposobie jest mo\u380 liwo\u347 \u263  walidacji danych wprowadzanych do formularza za pomoc\u261  niestandardowych walidator\'f3w.\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f1\b \cf0 from django import forms\
From .model import MyModel\
\
class MyFormNewName(forms.ModelForm):\
	# Pola formularza\
	class Meta():\
		model = MyModel\
		# Pola formularzy\
		fields = __all__ - 
\f0\b0 pobieramy wszystkie pola formularzy\

\f1\b 		exclude = [\'84field1\'94, \'84field2\'94] 
\f0\b0 - wykluczamy p\'f3l kt\'f3rych nie chcemy\
		
\f1\b fileds = (\'84field1\'94, \'84filed2\'94)
\f0\b0  - pobieramy tylko te pola kt\'f3re chcemy
\f1\b \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b0 \cf0 # Drugi spos\'f3b\
# W drugim sposobie, poniewa\uc0\u380  \u322 \u261 czymy nasz formularz z modele danych to znaczy, \u380 e formularz zostanie wygenerowany automatycznie z takimi polami aby dopasowa\u263  je do wystepuj\u261 cych danych w modelu danych aplikacji NameApp. Dlatego nie musimy tworzy\u263  tych p\'f3l. Tylko w klasie Met\u261  tworzy odpowiednie opcje tych p\'f3l formularza. W tym sposobie nie ma mo\u380 liwo\u347 ci walidacji danych wprowadzanych do formularza za pomoc\u261  niestandardowych walidator\'f3w. B\u281 dzie walidacja rodzaju wprowadzanych danych. Bo b\u281 dzie to walidacja przez model danych ale nie b\u281 dziemy mo\u380 liwo\u347 ci wprowadzi\u263  swoich walidator\'f3w. Na przyk\u322 ad tylko os\'f3by z imieniem zaczynaj\u261 cym si\u281 \'a0na literk\u281  T.\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f1\b \cf0 from django import forms\
From .model import MyModel\
\
class MyFormNewName(forms.ModelForm):\
	class Meta():\
		model = MyModel\
		# Pola formularzy\
		fields = __all__ - 
\f0\b0 pobieramy wszystkie pola formularzy\

\f1\b 		exclude = [\'84field1\'94, \'84field2\'94] 
\f0\b0 - wykluczamy p\'f3l kt\'f3rych nie chcemy\
		
\f1\b fileds = (\'84field1\'94, \'84filed2\'94)
\f0\b0  - pobieramy tylko te pola kt\'f3re chcemy	}