# Generated by Django 3.2.3 on 2021-07-07 22:20

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter group name', max_length=100, unique=True)),
                ('slug', models.SlugField(allow_unicode=True, default='', editable=False, max_length=100, unique=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='GroupMatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_group_match', models.CharField(editable=False, max_length=5, unique=True)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('slug', models.SlugField(allow_unicode=True, default='', editable=False, max_length=100, unique=True)),
                ('group', models.ForeignKey(help_text='Choose the group in which the team plays in tournaments', on_delete=django.db.models.deletion.PROTECT, related_name='group_match', to='euro2020.group')),
            ],
            options={
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='StartPosition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.PositiveSmallIntegerField(help_text='Enter the position in the group at the starte', unique=True)),
            ],
            options={
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter team name', max_length=100, unique=True)),
                ('slug', models.SlugField(allow_unicode=True, default='', editable=False, max_length=100, unique=True)),
                ('played', models.PositiveSmallIntegerField(default=0, help_text='Enter the number of played match by team')),
                ('won', models.PositiveSmallIntegerField(default=0, help_text='Enter the number of won match by team')),
                ('drawn', models.PositiveSmallIntegerField(default=0, help_text='Enter the number of drawn match by team')),
                ('lost', models.PositiveSmallIntegerField(default=0, help_text='Enter the number of lost match by team')),
                ('goal_for', models.PositiveSmallIntegerField(default=0, help_text='Enter the number of goals scored by team')),
                ('goal_against', models.PositiveSmallIntegerField(default=0, help_text='Enter the number of goals lost by team')),
                ('goal_difference', models.SmallIntegerField(default=0, help_text='Enter the difference beetwen goals scored and golas lost by team')),
                ('points', models.PositiveSmallIntegerField(default=0, help_text='Enter the number of points get by team')),
            ],
            options={
                'ordering': ['-points', '-goal_difference', 'name'],
            },
        ),
        migrations.CreateModel(
            name='TournamentMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.PositiveSmallIntegerField(default=0, help_text='Enter the number of points get by user')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_tournament', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Users members',
            },
        ),
        migrations.CreateModel(
            name='GroupMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_position_at_start', models.CharField(editable=False, max_length=2, unique=True)),
                ('played', models.PositiveSmallIntegerField(default=0, help_text='Enter the number of played match by team')),
                ('won', models.PositiveSmallIntegerField(default=0, help_text='Enter the number of won match by team')),
                ('drawn', models.PositiveSmallIntegerField(default=0, help_text='Enter the number of drawn match by team')),
                ('lost', models.PositiveSmallIntegerField(default=0, help_text='Enter the number of lost match by team')),
                ('goal_for', models.PositiveSmallIntegerField(default=0, help_text='Enter the number of goals scored by team')),
                ('goal_against', models.PositiveSmallIntegerField(default=0, help_text='Enter the number of goals lost by team')),
                ('goal_difference', models.SmallIntegerField(default=0, help_text='Enter the difference beetwen goals scored and golas lost by team')),
                ('points', models.PositiveSmallIntegerField(default=0, help_text='Enter the number of points get by team')),
                ('group', models.ForeignKey(help_text='Choose the group in which the team plays in tournaments', on_delete=django.db.models.deletion.PROTECT, related_name='group_member', to='euro2020.group')),
                ('position_at_start', models.ForeignKey(help_text='Choose the position in the group at the start', on_delete=django.db.models.deletion.PROTECT, related_name='start_position_member', to='euro2020.startposition')),
                ('team', models.ForeignKey(help_text='Choose a team participate in the tournament', on_delete=django.db.models.deletion.PROTECT, related_name='team_member', to='euro2020.team')),
            ],
            options={
                'ordering': ['group', '-points', '-goal_difference', 'position_at_start'],
            },
        ),
        migrations.CreateModel(
            name='GroupMatchScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('host_goals', models.PositiveSmallIntegerField(default=0, help_text='Enter the goals for host team')),
                ('guest_goals', models.PositiveSmallIntegerField(default=0, help_text='Enter the goals for guest team')),
                ('group_match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='score_group_match', to='euro2020.groupmatch')),
            ],
            options={
                'ordering': ['group_match'],
            },
        ),
        migrations.CreateModel(
            name='GroupMatchPredict',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('host_goals', models.PositiveSmallIntegerField(default=0, help_text='Enter predict number of goals for host team')),
                ('guest_goals', models.PositiveSmallIntegerField(default=0, help_text='Enter predict number of goals for guest team')),
                ('group_match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='predict_group_match', to='euro2020.groupmatch')),
                ('user_predict', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_predict_group_match', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='groupmatch',
            name='guest',
            field=models.ForeignKey(help_text='Choose a team that will be the host guest', on_delete=django.db.models.deletion.PROTECT, related_name='guest_group_match', to='euro2020.groupmember'),
        ),
        migrations.AddField(
            model_name='groupmatch',
            name='host',
            field=models.ForeignKey(help_text='Choose a team that will be the host team', on_delete=django.db.models.deletion.PROTECT, related_name='host_group_match', to='euro2020.groupmember'),
        ),
    ]
